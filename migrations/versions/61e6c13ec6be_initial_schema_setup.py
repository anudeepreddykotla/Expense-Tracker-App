"""Initial schema setup

Revision ID: 61e6c13ec6be
Revises: 
Create Date: 2025-08-12 18:25:08.757076

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '61e6c13ec6be'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.UUID(), nullable=False, comment='Unique user identifier'),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False, comment="User's full name"),
    sa.Column('email', sa.VARCHAR(length=150), nullable=False, comment="User's email address"),
    sa.Column('phone', sa.VARCHAR(length=20), nullable=False, comment="User's mobile number with country code"),
    sa.Column('password_hash', sa.VARCHAR(length=256), nullable=False, comment='Hashed password'),
    sa.Column('is_phone_verified', sa.BOOLEAN(), server_default='false', nullable=False, comment='Indicates if the phone number is verified'),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Account creation time'),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Last profile update time'),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('bank_accounts',
    sa.Column('account_id', sa.UUID(), nullable=False, comment='Unique bank account ID'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='Owner user'),
    sa.Column('bank_name', sa.VARCHAR(length=100), nullable=False, comment='Bank name (e.g., SBI)'),
    sa.Column('account_mask', sa.VARCHAR(length=20), nullable=False, comment='Masked account number (e.g., XXXX1234)'),
    sa.Column('last_sync', sa.TIMESTAMP(timezone=True), nullable=True, comment='Last synchronization time date'),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False, comment='Linked Creation time'),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False, comment='Last update time'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('account_id')
    )
    op.create_table('fcm_tokens',
    sa.Column('fcm_token_id', sa.UUID(), nullable=False, comment='Unique token identifier'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='Owner user ID'),
    sa.Column('token', sa.TEXT(), nullable=False, comment='Firebase Cloud Messaging token'),
    sa.Column('device_info', sa.VARCHAR(length=255), nullable=True, comment='Optional device description'),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False, comment='Creation time'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('fcm_token_id')
    )
    op.create_table('refresh_tokens',
    sa.Column('token_id', sa.UUID(), nullable=False, comment='Unique token identifier'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='Owner user ID'),
    sa.Column('token', sa.TEXT(), nullable=False, comment='Refresh token string'),
    sa.Column('expires_at', sa.TIMESTAMP(timezone=True), nullable=False, comment='Token expiry timestamp'),
    sa.Column('revoked', sa.BOOLEAN(), nullable=False, comment='Revocation status'),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False, comment='Creation time'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('token_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('refresh_tokens')
    op.drop_table('fcm_tokens')
    op.drop_table('bank_accounts')
    op.drop_table('users')
    # ### end Alembic commands ###
